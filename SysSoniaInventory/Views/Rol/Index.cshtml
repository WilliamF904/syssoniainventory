@model IEnumerable<SysSoniaInventory.Models.ModelRol>

@{
    ViewData["Title"] = "Index";
}

<div class="row">

    <div class="col-lg-6 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h1 class="card-title">Lista de Roles</h1>
                <div class="d-flex align-items-center justify-content-start">
                     @if (User.HasClaim("AccessTipe", "Nivel 5"))
                    {
                        <a asp-action="Create" class="btn btn-outline-primary font-weight-bold ml-2">
                            <i class="fas fa-plus"></i> Nuevo rol
                        </a>

                        <div class="separator mx-3"></div>
                    }
                    @if (User.HasClaim("AccessTipe", "Nivel 5"))
                    {
                        <div class="dropdown-container">
                            <button id="dropdownButton" class="dropdown-button btn btn-outline-secondary">
                                <i class="mdi mdi-download"></i> Descargar PDF
                            </button>
                            <ul id="dropdownMenu" class="dropdown-menu">
                                <li>
                                    <a asp-action="GeneratePdf">
                                        <i class="mdi mdi-download"></i> Descargar Todos los Roles
                                    </a>
                                </li>
                            </ul>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-6 grid-margin stretch-card">
        <div class="card dropdown-container">
            <div class="card-body">
                <h1 class="card-title">Filtrado de roles</h1>

                <form>
                    <div class="form-group d-flex align-items-center">
                        <input type="text" id="filterText" class="form-control" placeholder="Filtrar por nombre o tipo de acceso" style="width: auto;">
                    </div>

                    <div class="form-group d-flex align-items-center">
                        <select id="filterAccessType" class="form-control" style="width: auto;">
                            <option value="">Todos los niveles</option>
                            <option value="Nivel 1">Nivel 1 - Acceso Total</option>
                            <option value="Nivel 2">Nivel 2 - Acceso Intermedio</option>
                            <option value="Nivel 3">Nivel 3 - Acceso Básico</option>
                            <option value="Nivel 4">Nivel 4 - Acceso Restringido</option>
                        </select>
                    </div>
                </form>

            </div>
        </div>
    </div>

    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Tabla de roles</h4>

                <div class="table-responsive">
                    <table class="table table-bordered table-striped  table-hover" id="roleTable">
                        <thead>
                            <tr>
                                <th scope="col">@Html.DisplayNameFor(model => model.Name)</th>
                                <th scope="col">@Html.DisplayNameFor(model => model.AccessTipe)</th>
                                <th scope="col">Acciones</th>
                            </tr>
                        </thead>
                        <tbody class="txt-whithe">
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                    <td>@Html.DisplayFor(modelItem => item.AccessTipe)</td>
                                    <td>
                                         @if (User.HasClaim("AccessTipe", "Nivel 5"))
                    {
                                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-warning">Editar</a>
                    }
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info">Detalles</a>
                                        @if (User.HasClaim("AccessTipe", "Nivel 5"))
                                        {
                                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">Eliminar</a>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div id="paginationControls" class="mt-3"></div>
            </div>
        </div>
    </div>
</div>

<style>
    .form-group label {
        width: 150px;
        text-align: right;
    }

    .form-group input,
    .form-group select {
        flex-grow: 1;
    }

    .d-flex {
        display: flex;
    }

    .separator {
        width: 2px;
        height: 30px;
        background-color: #ddd;
    }

    .dropdown-container {
        position: relative;
    }

        .dropdown-container .dropdown-menu {
            position: absolute;
            top: 100%;
            left: 0;
            display: none;
            list-style: none;
            padding: 10px;
            margin: 0;
            background-color: #f8f9fa;
            border: 1px solid #ddd;
            border-radius: 5px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
            width: 250px;
            opacity: 0;
            transform: translateY(-10px);
            transition: opacity 0.3s ease, transform 0.3s ease;
            z-index: 1000;
        }

            .dropdown-container .dropdown-menu.show {
                display: block;
                opacity: 1;
                transform: translateY(0);
            }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const dropdownButton = document.getElementById("dropdownButton");
        const dropdownMenu = document.getElementById("dropdownMenu");

        dropdownButton.addEventListener("click", function (event) {
            event.stopPropagation();
            dropdownMenu.classList.toggle("show");
        });

        document.addEventListener("click", function (event) {
            if (!dropdownMenu.contains(event.target)) {
                dropdownMenu.classList.remove("show");
            }
        });

        const filterText = document.getElementById('filterText');
        const filterAccessType = document.getElementById('filterAccessType');
        const roleTable = document.getElementById('roleTable');
        const rows = Array.from(roleTable.getElementsByTagName('tbody')[0].getElementsByTagName('tr'));
        const rowsPerPage = 6;
        let currentPage = 1;
        let filteredRows = rows;

        function filterTable() {
            const filterValue = filterText.value.toLowerCase();
            const accessTypeValue = filterAccessType.value;

            filteredRows = rows.filter(row => {
                const cells = Array.from(row.getElementsByTagName('td'));
                const matchesText = !filterValue || cells.some(cell => cell.textContent.toLowerCase().includes(filterValue));
                const matchesAccessType = !accessTypeValue || cells[1].textContent.trim() === accessTypeValue;
                return matchesText && matchesAccessType;
            });

            currentPage = 1; // Reset to first page
            displayRows();
            setupPagination();
        }

        function displayRows() {
            const start = (currentPage - 1) * rowsPerPage;
            const end = start + rowsPerPage;

            rows.forEach(row => (row.style.display = 'none'));
            filteredRows.slice(start, end).forEach(row => (row.style.display = ''));
        }

        function setupPagination() {
            const totalPages = Math.ceil(filteredRows.length / rowsPerPage);
            const paginationControls = document.getElementById('paginationControls');
            paginationControls.innerHTML = '';

            for (let i = 1; i <= totalPages; i++) {
                const button = document.createElement('button');
                button.textContent = i;
                button.className = 'pagination-button';
                if (i === currentPage) {
                    button.classList.add('active');
                }

                button.addEventListener('click', () => {
                    currentPage = i;
                    displayRows();
                    setupPagination();
                });

                paginationControls.appendChild(button);
            }
        }

        filterText.addEventListener('input', filterTable);
        filterAccessType.addEventListener('change', filterTable);
        displayRows();
        setupPagination();
    });
</script>
