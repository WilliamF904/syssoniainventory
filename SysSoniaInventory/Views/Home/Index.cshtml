@model List<SysSoniaInventory.ViewModels.FacturaViewModel>


    <div class="col-lg-6 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Gráfico de Ventas (10 max.)</h4>
                <canvas id="barChart" style="height:230px"></canvas>
            </div>
        </div>
    </div>


    <script>
        // Datos enviados desde el backend
        const facturas = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model)) || [];

        console.log('Datos de facturas:', facturas);

        // Crear un mapa para acumular las cantidades vendidas por producto
        const productosMap = {};

        if (Array.isArray(facturas)) {
            facturas.forEach(factura => {
                const detalles = factura.Detalles || []; // Acceder a la propiedad Detalles

                detalles.forEach(detalle => {
                    const codigoProducto = detalle.CodigoProducto || "Sin Código";
                    productosMap[codigoProducto] = (productosMap[codigoProducto] || 0) + (detalle.CantidadProduct || 0);
                });
            });
        }

        console.log('Mapa de productos:', productosMap);

        // Ordenar productos por cantidad y tomar los 10 más vendidos
        const productosOrdenados = Object.entries(productosMap)
            .sort((a, b) => b[1] - a[1])
            .slice(0, 10);

        // Extraer etiquetas y datos para el gráfico
        const productos = productosOrdenados.map(p => p[0]);
        const cantidades = productosOrdenados.map(p => p[1]);

        console.log('Productos:', productos);
        console.log('Cantidades:', cantidades);

        if (productos.length === 0 || cantidades.length === 0) {
            console.error('No hay datos suficientes para generar el gráfico.');
        } else {
            // Crear el gráfico
            const ctx = document.getElementById('barChart').getContext('2d');
            const barChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: productos,
                    datasets: [{
                        label: 'Cantidad Vendida',
                        data: cantidades,
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }
    </script>
