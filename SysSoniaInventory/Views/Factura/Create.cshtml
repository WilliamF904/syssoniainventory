@model SysSoniaInventory.Models.ModelFactura

@{
    ViewData["Title"] = "Crear Factura";
}

<div class="container-fluid">
    <form asp-action="Create" method="post">
        <div class="row">
            <!-- Columna izquierda -->
            <div class="col-md-5">
                <h1 class="display-5 font-weight-bold">Nueva Factura</h1>
                <hr>
                <div class="form-group">
                    <label for="NameSucursal" class="h5 font-weight-bold">Sucursal:</label>
                    <input asp-for="NameSucursal" class="form-control font-weight-bold form-control-lg readonly-input" id="NameSucursal" value="Sucursal Fija" readonly />
                </div>
                <div class="form-group">
                    <label for="NameUser" class="h5 font-weight-bold">Usuario:</label>
                    <input asp-for="NameUser" class="form-control font-weight-bold form-control-lg readonly-input" id="NameUser" value="Usuario Fijo" readonly />
                </div>
                <div class="form-group">
                    <label for="NameClient" class="h5 font-weight-bold">Nombre del Cliente:</label>
                    <input asp-for="NameClient" class="form-control font-weight-bold form-control-lg" id="NameClient" placeholder="Escriba el nombre del cliente" />
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="Date" class="h5 font-weight-bold">Fecha:</label>
                            <input asp-for="Date" class="form-control font-weight-bold form-control-lg readonly-input" id="Date" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="Time" class="h5 font-weight-bold">Hora:</label>
                            <input asp-for="Time" class="form-control font-weight-bold form-control-lg readonly-input" id="Time" type="time" value="@DateTime.Now.ToString("HH:mm")" readonly />
                        </div>
                    </div>
                </div>
            </div>

            <!-- Columna derecha -->
            <div class="col-md-7">
                <h4 class="font-weight-bold">Productos</h4>
                <div class="form-group">
                    <label for="ProductSelect" class="h5 font-weight-bold">Seleccionar Productos:</label>
                    <select id="ProductSelect" class="form-control font-weight-bold form-control-lg">
                        @foreach (var product in ViewBag.Productos)

                        {
                            <option value="@product.Id" data-name="@product.Name" data-price="@product.SalePrice" data-stock="@product.Stock" data-codigo="@product.Codigo">
                                @product.Name - Precio: $@product.SalePrice
                            </option>
                        }
                    </select>
                </div>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Producto</th>
                            <th>Cantidad</th>
                            <th>Precio Unitario</th>
                            <th>Descuento (%)</th>
                            <th>Subtotal</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="ProductTableBody">
                        <!-- Filas dinámicas -->
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="4" class="text-right font-weight-bold">Total General:</td>
                            <td colspan="2" id="TotalGeneral">$0.00</td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>

        <!-- Contenedor oculto para los inputs dinámicos -->
        <div id="HiddenInputsContainer"></div>

        <hr />
        <button type="submit" class="btn btn-primary btn-lg">Guardar</button>
        <a asp-action="Index" class="btn btn-danger btn-lg">Cancelar</a>
    </form>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const productsSelect = document.getElementById('ProductSelect');
        const productTableBody = document.getElementById('ProductTableBody');
        const totalGeneral = document.getElementById('TotalGeneral');
        const hiddenInputsContainer = document.getElementById('HiddenInputsContainer');
        let products = [];
        let productIndex = 0;

        function updateTotal() {
            let total = products.reduce((sum, product) => sum + product.subtotal, 0);
            totalGeneral.textContent = `$${total.toFixed(2)}`;
        }

        function addHiddenInputs(product) {
            const baseName = `detalles[${productIndex}]`;
            hiddenInputsContainer.innerHTML += `
                    <input type="hidden" name="${baseName}.IdProduct" value="${product.id}" />
                    <input type="hidden" name="${baseName}.CodigoProducto" value="${product.codigo}" />
                    <input type="hidden" name="${baseName}.CantidadProduct" value="${product.quantity}" />
                    <input type="hidden" name="${baseName}.ValorDescuento" value="${product.discount}" />
                    <input type="hidden" name="${baseName}.SalePriceUnitario" value="${product.price}" />
                    <input type="hidden" name="${baseName}.PriceTotal" value="${product.subtotal}" />
                `;
            productIndex++;
        }

        productsSelect.addEventListener('change', function () {
            const selectedOption = productsSelect.options[productsSelect.selectedIndex];
            const productId = selectedOption.value;
            const productName = selectedOption.getAttribute('data-name');
            const productPrice = parseFloat(selectedOption.getAttribute('data-price'));
            const productStock = parseInt(selectedOption.getAttribute('data-stock'));
            const productCodigo = selectedOption.getAttribute('data-codigo');

            if (products.some(p => p.id === productId)) {
                alert("Este producto ya está agregado.");
                return;
            }

            const quantity = prompt(`Ingrese la cantidad para ${productName} (Máximo: ${productStock}):`, "1");
            if (!quantity || isNaN(quantity) || quantity <= 0 || quantity > productStock) {
                alert("Cantidad inválida.");
                return;
            }

            const discount = prompt(`Ingrese el porcentaje de descuento para ${productName}:`, "0");
            if (!discount || isNaN(discount) || discount < 0 || discount > 100) {
                alert("Descuento inválido.");
                return;
            }

            const discountedPrice = productPrice - (productPrice * discount / 100);
            const subtotal = discountedPrice * quantity;
            const product = { id: productId, codigo: productCodigo, name: productName, quantity, price: productPrice, discount, subtotal };
            products.push(product);

            const row = document.createElement('tr');
            row.innerHTML = `
                    <td>${productName}</td>
                    <td>${quantity}</td>
                    <td>$${productPrice.toFixed(2)}</td>
                    <td>${discount}%</td>
                    <td>$${subtotal.toFixed(2)}</td>
                    <td>
                        <button class="btn btn-danger btn-sm" onclick="removeProduct('${productId}', this)">Eliminar</button>
                    </td>`;
            productTableBody.appendChild(row);
            addHiddenInputs(product);
            updateTotal();
        });

        window.removeProduct = function (productId, button) {
            products = products.filter(p => p.id !== productId);
            button.parentElement.parentElement.remove();
            updateTotal();
        };
    });
</script>

