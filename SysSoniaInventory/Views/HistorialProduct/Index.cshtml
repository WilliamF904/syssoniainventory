@model IEnumerable<SysSoniaInventory.Models.ModelHistorialProduct>

@{
    ViewData["Title"] = "Index";
}

<style>
    .pagination .page-link {
        background-color: #333;
        color: #fff;
        border: 1px solid #444;
    }

    .pagination .page-item.active .page-link {
        background-color: #555;
        border-color: #666;
    }

    .pagination .page-item.disabled .page-link {
        background-color: #222;
        color: #777;
        border-color: #333;
    }
</style>
<div class="row">
    <div class="col-lg-6 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h1 class="card-title">Lista de Registros</h1>
               

            </div>
        </div>
    </div>
    <div class="col-lg-6 grid-margin stretch-card">
        <div class="card dropdown-container">
            <div class="card-body">
                <form method="get" asp-action="Index">
                <div class="d-flex justify-content-between align-items-center">
                 
                    <h1 class="card-title mb-0">Filtrar Registros</h1>
                    <div class="col-md-3 d-flex align-items-end">
                            <button type="submit" class="btn btn-outline-success w-100">  <i class="mdi mdi-magnify btn-icon-prepend"></i>Filtrar</button>
                    </div>
                </div>
             
                    <div class="row">
                        <div class="col-md-6">
                            <label for="razonCambio" class="form-label">Selecciona una acción</label>
                            <select id="razonCambio" name="razonCambio" class="form-control txt-whithe">
                                <option value="">Todos</option>
                                <option value="Nuevo producto">Nuevo producto</option>
                                <option value="Edición de producto">Edición de producto</option>
                                <option value="Actualización de stock">Actualización de stock</option>
                                <option value="Eliminación de producto">Eliminación de producto</option>
                                <option value="Devolución de productos (Devolución)">Devolución de productos</option>
                                <option value="Entrada de productos (Compra)">Entrada de productos</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="idProducto" class="form-label">ID del producto</label>
                            <input type="number" id="idProducto" name="idProducto" class="form-control txt-whithe" placeholder="Ingrese el ID del producto" value="@ViewBag.IdProducto" />
                        </div>
                      
                    </div>
                </form>
            </div>
        </div>
    </div>



    <div class="col-12 grid-margin">
        <div class="card">
            <div class="card-body">

                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover">
                        <thead>
                            <tr>
                                <td>Id</td>
                                <th>
                                   Nombre del usuario
                                </th>
                                <th>
                                   Id del producto
                                </th>
                                <th>
                                    Acción realizada
                                </th>
                                <th>
                                   Fecha del registro
                                </th>
                           
                             
                                

                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody class="txt-whithe">
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>  @Html.DisplayFor(modelItem => item.Id)</td>
                                    <td >
                                        @Html.DisplayFor(modelItem => item.NameUser)
                                    </td>
                                    <td >
                                        @Html.DisplayFor(modelItem => item.IdProduct)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.RazonCambioAuto)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Date)
                                    </td>
                               
                                  
                                    <td>

                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info primary">Detalles</a>
                                       
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <!-- Paginación -->
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        @{
                            int totalPages = ViewBag.TotalPages;
                            int currentPage = ViewBag.Page;
                            int maxVisiblePages = 10;
                            int startPage = Math.Max(1, currentPage - maxVisiblePages / 2);
                            int endPage = Math.Min(totalPages, startPage + maxVisiblePages - 1);

                            // Ajustar si estamos cerca del inicio o final
                            if (endPage - startPage < maxVisiblePages - 1)
                            {
                                startPage = Math.Max(1, endPage - maxVisiblePages + 1);
                            }
                        }

                        <!-- Flecha izquierda (deshabilitada si estamos en la primera página) -->
                        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                            <a class="page-link" href="@(currentPage > 1 ? $"?page={currentPage - 1}&razonCambio={ViewBag.RazonCambio}&idProducto={ViewBag.IdProducto}" : "#")" aria-label="Anterior">
                                <span aria-hidden="true">«</span>
                            </a>
                        </li>

                        <!-- Números de paginación -->
                        @for (var i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="?page=@i&razonCambio=@ViewBag.RazonCambio&idProducto=@ViewBag.IdProducto">@i</a>
                            </li>
                        }

                        <!-- Flecha derecha (deshabilitada si estamos en la última página) -->
                        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                            <a class="page-link" href="@(currentPage < totalPages ? $"?page={currentPage + 1}&razonCambio={ViewBag.RazonCambio}&idProducto={ViewBag.IdProducto}" : "#")" aria-label="Siguiente">
                                <span aria-hidden="true">»</span>
                            </a>
                        </li>
                    </ul>
                </nav>

            </div>
        </div>
    </div>
</div>